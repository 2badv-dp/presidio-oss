# Presidio PR validation: security analysis, lint, build, unit test, functional tests
pr:
  branches:
    include:
      - V2

variables:
  - group: Presidio-V2-CI
        
stages:
  - stage: BuildAndTest
    displayName: Build and Test
    jobs:
        #- job: validate
        #  displayName: 'Validate PR pre-requisites'
        #  steps:
        #    - template: .pipelines/templates/validate-version.yml
        #      parameters:
        #        UPSTREAM_BRANCH: $(System.PullRequest.TargetBranch)

        - job: Inclusivelint
          displayName: 'Inclusive linting validation'
          steps:
            - template: .pipelines/templates/inclusive-lint.yml

        - job: SecurityAnalysis
          displayName: Security Analysis
          pool:
              # CredScan only runs on Windows
              vmImage: 'windows-latest'
          steps:
            - template: .pipelines/templates/security-analysis.yml

        - job: TestAnalyzer
          displayName: Test Analyzer
          dependsOn:
          #- 'validate'
          - 'Inclusivelint'
          - 'SecurityAnalysis'
          pool:
            vmImage: 'ubuntu-16.04'
          strategy:
            matrix:
              Python36:
                python.version: '3.6'
              Python37:
                python.version: '3.7'
              Python38:
                python.version: '3.8'

          steps:
            - task: UsePythonVersion@0
              inputs:
                versionSpec: '$(python.version)'
              displayName: 'Use Python $(python.version)'
            - template: .pipelines/templates/build-analyzer.yml

        - job: TestAnonymizer
          displayName: Test Anonymizer
          dependsOn:
          #- 'validate'
          - 'Inclusivelint'
          - 'SecurityAnalysis'
          pool:
            vmImage: 'ubuntu-16.04'
          strategy:
            matrix:
              Python36:
                python.version: '3.6'
              Python37:
                python.version: '3.7'
              Python38:
                python.version: '3.8'

          steps:
            - task: UsePythonVersion@0
              inputs:
                versionSpec: '$(python.version)'
              displayName: 'Use Python $(python.version)'
            - template: .pipelines/templates/build-anonymizer.yml

        - job: FunctionalTests
          displayName: Functional Tests
          dependsOn:
            - 'Inclusivelint'
            - 'SecurityAnalysis'
          pool:
            vmImage: 'ubuntu-16.04'
          variables:
            REGISTRY_NAME: '$(ACR_REGISTRY_NAME).azurecr.io/'
            TAG: ':$(Build.BuildId)'
          steps:
            - task: DockerCompose@0
              displayName: Build Presidio Images
              inputs:
                  action: Build services
                  dockerComposeFile: docker-compose.yml
                  dockerComposeFileArgs: |
                    REGISTRY_NAME=$(REGISTRY_NAME)
                    TAG=$(TAG)
            - template: .pipelines/templates/functional-tests.yml
